name: yamdb workflow

on: [push]

jobs:
  tests:
    name: Test with flake8 and pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependences
        run: | 
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest pytest-django
          pip install -r requirements.txt

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: api_yamdb.settings
        run: |
          python -m flake8
          python -m pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb:latest

  deploy:
    name: Delpoy project to Yandex.Cloud 
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Executing remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.YANDEX_CLOUD_HOST }}
          username: ${{ secrets.YANDEX_CLOUD_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/yamdb:latest
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env 
            echo DB_ENGINE=${{ secrets.ENV_DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.ENV_DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.ENV_POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.ENV_POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.ENV_DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.ENV_DB_PORT }} >> .env
            echo DJANGO_ADMIN_EMAIL=${{ secrets.ENV_DJANGO_ADMIN_EMAIL }} >> .env
            echo DJANGO_ADMIN_USERNAME=${{ secrets.ENV_DJANGO_ADMIN_USERNAME }} >> .env
            echo DJANGO_ADMIN_PASSWORD=${{ secrets.ENV_DJANGO_ADMIN_PASSWORD }} >> .env
            sudo docker-compose up -d
      
      # - name: Send telegram message
      #   uses: appleboy/telegram-action@master
      #   with:
      #     to: ${{ secrets.TELEGRAM_TO }}
      #     token: ${{ secrets.TELEGRAM_TOKEN }}
      #     message: |
      #       ${{ github.actor }} created commit
      #       ${{ github.event.commits[0].message }}
      #       https://github.com/${{ github.repository }}/commit/${{github.sha}}